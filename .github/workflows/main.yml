on:
  push:
    branches:
      - master
      - 1-10-6
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: 'devel', rtools: '35'}
        - { os: windows-latest, r: 'devel', rtools: '40'}
        - { os: macOS-latest, r: 'devel'}
        - { os: ubuntu-18.04, r: '3.6', rspm: "https://demo.rstudiopm.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - name: Configure git
        run: |
          git config --global core.autocrlf false
          git config --global user.email "ghau@example.com"
          git config --global user.name "GitHub Actions User"
        
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master
      
      - name: Query dependencies
        run: Rscript -e "install.packages('remotes')" -e "saveRDS(remotes::dev_package_deps(dependencies = TRUE), 'depends.Rds', version = 2)"

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install dependencies
        run: |
          Rscript -e "install.packages(c('BiocManager'))" -e "BiocManager::install('grimbough/Rhdf5lib', ref='1-10-6')"
          Rscript -e "BiocManager::install(c('rcmdcheck', 'rmarkdown', 'knitr', 'testthat', 'BiocStyle',
            'bit64', 'microbenchmark', 'dplyr', 'ggplot2'))"

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'warning', check_dir = 'check')"

      # - name: Upload check results
      #   if: failure()
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: ${{ runner.os }}-r${{ matrix.config.r }}-results
      #     path: check
          
#      - name: Test coverage
#        if: matrix.config.os == 'macOS-latest' && matrix.config.r == 'release'
#        run: Rscript -e 'install.packages("covr")' -e 'covr::codecov(type = "all", token = "${{secrets.CODECOV_TOKEN}}")'

